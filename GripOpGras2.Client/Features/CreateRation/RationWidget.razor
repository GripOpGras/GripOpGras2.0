<table class="table table-bordered">
	<thead>
	<tr>
		<th scope="col">Product</th>
		<th scope="col">kg dm</th>
		<th scope="col">VEM</th>
		<th scope="col">RE in kg</th>
	</tr>
	</thead>
	<tbody>
	@if (Ration != null)
	{
		<tr>
			<th scope="row">Grass intake</th>
			<td>@Ration.GrassIntake</td>
			@if (Ration.Plot != null)
			{
				<td>@CalculateAmountOfVEM(Ration.Plot.FeedAnalysis, Ration.GrassIntake)</td>
				<td>@CalculateAmountOfREInKg(Ration.Plot.FeedAnalysis, Ration.GrassIntake)</td>
			}
			else
			{
				<td>0</td>
				<td>0</td>
			}
		</tr>

		@if (Ration.Roughages != null)
		{
			@foreach (KeyValuePair<Roughage, float> roughage in Ration.Roughages)
			{
				<tr>
					<th scope="row">@roughage.Key.Name</th>
					<td>@roughage.Value</td>
					<td>@CalculateAmountOfVEM(roughage.Key.FeedAnalysis, roughage.Value)</td>
					<td>@CalculateAmountOfREInKg(roughage.Key.FeedAnalysis, roughage.Value)</td>
				</tr>
			}
		}
	}
	</tbody>
</table>

@code {

	[Parameter]
	public FeedRation? Ration { get; set; }

	private float CalculateAmountOfVEM(FeedAnalysis? feedAnalysis, float? dmIntakeInKg)
	{
		if (feedAnalysis?.VEM == null || dmIntakeInKg is null or 0)
		{
			return 0;
		}

		return (float)(dmIntakeInKg * feedAnalysis.VEM);
	}

	private float CalculateAmountOfREInKg(FeedAnalysis? feedAnalysis, float? dmIntakeInKg)
	{
		if (feedAnalysis?.RE == null || dmIntakeInKg is null or 0)
		{
			return 0;
		}

		return (float)(dmIntakeInKg * feedAnalysis.RE / 1000);
	}

}